Bridgeパターンは実装、管理、機能に分けることによって機能を追加する際の重複した実装部分を除くことができる設計パターンです。

役割一覧：

-管理クラス
 実装クラスが継承するインターフェースをフィールドとして保持。
 
-実装クラス
 共通の実装部分をインターフェースに記述し、実装クラスで実装。
 
-機能クラス
 １．管理クラスを継承し、機能を記述。
 ２．前の管理クラスを継承し、機能を記述。
 ３．２を繰り返す。

使い方：
管理クラスから最も遠い継承クラスをインスタンス化。
インスタンス化した機能クラスではそれまでに継承してきたクラスすべて(管理クラスも含む)に記述された機能を全て使用することが可能。
 
